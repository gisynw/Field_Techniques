{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-geog-3319-geographic-field-techniques","title":"Welcome to GEOG 3319 Geographic Field Techniques","text":"<p>Hi there! Welcome to my GitHub repository, where I share teaching material. I'm excited to have you here!</p>"},{"location":"#about-me","title":"About Me","text":"<p>I am an Assistant Professor (AP) in Geography Department at The University of Central Arkansas. </p> <p>I hold a Ph.D. from the Department of Geospatial Information Sciences at the University of Texas at Dallas (\u5fb7\u5dde\u5927\u5b66\u8fbe\u62c9\u65af\u5206\u6821).</p>"},{"location":"#education","title":"Education","text":"<ul> <li>2019\u20132024 \u2003 Ph.D. in Geospatial Information Sciences. University of Texas at Dallas, Texas, USA</li> <li>2017\u20132019 \u2003 M.A. in Geography. Binghamton University (SUNY), New York, USA</li> <li>2012\u20132016 \u2003 B.S. in  Resource Environment and Urban-Rural Planning Management. Xi\u2019an University of Science and Technology, China</li> </ul>"},{"location":"#teaching","title":"Teaching","text":"<ul> <li>2025 \u2003  GEOG 3319 GEOGRAPHIC FIELD TECHNIQUES - UCA</li> <li>2025 \u2003  GEOG 2475 - GIS I (CARTOGRAPHY) - UCA</li> <li>2025 \u2003  SSJ 376 Spatial Database DVLP in PRAC - Clark University</li> <li>2025 \u2003  GEOG 386 Sptial Topics: Python Programming - Clark University</li> <li>2025 \u2003  GEOG 247 Intermediate Quantitative Methods in GEOG - Clark University</li> <li>2024 \u2003  SSJ 30262 Web Mapping &amp; Open Source GIS - Clark University</li> <li>2024  \u2003 SSJ 302 Python Programming &amp; SSJ 30274 Computer PROG for GIS - Clark University</li> <li>2022  \u2003 Principles of Geospatial Information Sciences -  University of Texas at Dallas</li> <li>2021  \u2003 Methods of Quantitative Analysis in the Social and Policy Science - University of Texas at Dallas</li> </ul>"},{"location":"Content/syllabus/","title":"Syllabus Spring 2025","text":""},{"location":"Demo/Week01_Python_Intro/","title":"Week 1 Demo","text":"In\u00a0[4]: Copied! <pre>print(\"Hello, python\")\n</pre> print(\"Hello, python\") <pre>Hello, python\n</pre> In\u00a0[5]: Copied! <pre># This is comment: get result of 3+5\n3+5\n</pre> # This is comment: get result of 3+5 3+5 Out[5]: <pre>8</pre> <p>You can export a Jupyter Notebook as a Python file (.py), a PDF, or an HTML file. To export, select ... &gt; Export on the main toolbar. You're then presented with a dropdown of file format options.</p>"},{"location":"Demo/Week01_Python_Intro/#1.-Install-the-Visual-Studio-Code-(VS-Code)","title":"1. Install the Visual Studio Code (VS Code)\u00b6","text":"<p>Install Visual Studio Code</p>"},{"location":"Demo/Week01_Python_Intro/#2.-Install-Anaconda","title":"2. Install Anaconda\u00b6","text":"<p>To install Anaconda, download the installer from the Anaconda website. The installer will ask you to accept the license agreement, choose the installation directory.</p>"},{"location":"Demo/Week01_Python_Intro/#3.-Select-interpreter-in-VS-code","title":"3. Select interpreter in VS code\u00b6","text":"<p>if it is your first time to select interpretr, you need to install two extensions from extensions in the left side bar:</p> <ul> <li>Python</li> <li>Jupyter</li> </ul> <p></p> <p> </p>"},{"location":"Demo/Week01_Python_Intro/#The-Python:Select-Interpreter-(Ctrl+Shift+P)-command-displays-a-list-of-available-gloabl-environments,-conda-environments,-and-virtual-environments.","title":"The Python:Select Interpreter (Ctrl+Shift+P) command displays a list of available gloabl environments, conda environments, and virtual environments.\u00b6","text":""},{"location":"Demo/Week01_Python_Intro/#4.-Create-a-Juputer-Notebook","title":"4. Create a Juputer Notebook\u00b6","text":"<p>You can create a Jupyter Notebook by running the Create: New Jupyter Notebook command from the Command Palette (Ctrl+Shift+P) or by creating a new .ipynb file in your workspace.</p> <p>Or, you can select 'File' &gt; 'New File'</p>"},{"location":"Demo/Week01_Python_Intro/#5.-Start-your-first-Jupyter-Notebook","title":"5. Start your first Jupyter Notebook\u00b6","text":"<ul> <li>Developed originally by UC Berkeley's Ferando Perez</li> <li>Contain code &amp; rich text elements</li> <li>Perfect for sharing your analysis with others</li> <li>Gret for sharing your analysis with others</li> </ul>"},{"location":"Demo/Week01_Python_Intro/#6.-Writing-in-Markdown","title":"6. Writing in Markdown\u00b6","text":""},{"location":"Demo/Week01_Python_Intro/#6.1-Change-font-size","title":"6.1 Change font size\u00b6","text":"<ul> <li>In markdown, we talk about headings instead of font size<ul> <li>use # to adjust the size</li> </ul> </li> </ul>"},{"location":"Demo/Week01_Python_Intro/#Heading-1","title":"Heading 1\u00b6","text":""},{"location":"Demo/Week01_Python_Intro/#Heading-2","title":"Heading 2\u00b6","text":""},{"location":"Demo/Week01_Python_Intro/#Heading-3","title":"Heading 3\u00b6","text":"<p>sentence</p>"},{"location":"Demo/Week01_Python_Intro/#6.2-Formtted-text","title":"6.2 Formtted text\u00b6","text":"<ul> <li>Different styling (bold/italic), bulleted lists, etc</li> <li>In Jupyter, we call these text elements markdown</li> </ul> <p>Note: when you edit in VS Code, you can open Auto Save under File</p>"},{"location":"Demo/Week01_Python_Intro/#6.3-Bold/Italic","title":"6.3 Bold/Italic\u00b6","text":"<p>Thi is bold and this is italic</p>"},{"location":"Demo/Week01_Python_Intro/#6.4-Buid-lists","title":"6.4 Buid lists\u00b6","text":"<p>The asterisk symbol can be used to created bulleted lists as follows (use tabs to indent)</p> <ul> <li>Point one<ul> <li>Point two</li> </ul> </li> <li>Point Three</li> </ul>"},{"location":"Demo/Week01_Python_Intro/#6.5-Creating-a-new-line","title":"6.5 Creating a new line\u00b6","text":"<p>Include two spaces at the end of the line</p>"},{"location":"Demo/Week01_Python_Intro/#7.-Code-cells","title":"7. Code cells\u00b6","text":""},{"location":"Demo/Week01_Python_Intro/#8.-Save-your-Jupyter-Notebook","title":"8. Save your Jupyter Notebook\u00b6","text":"<p>You can save your Jupyter Notebook using the keyboard shortcut (Ctrl+S) or File &gt; Save.</p>"},{"location":"Demo/Week01_Python_Intro/#9.-Export-your-Jupyter-Notebook","title":"9. Export your Jupyter Notebook\u00b6","text":""},{"location":"Demo/Week01_Python_Intro/#10.-Virtual-environment","title":"10. Virtual environment\u00b6","text":""},{"location":"Demo/Week01_Python_Intro/#10.1-Create-a-virtual-environment-in-terminal","title":"10.1 Create a virtual environment in terminal\u00b6","text":"<p>Right click the Anaconda prompt and Run as Administrator (This step will ensure that your package is installed in Anaconda/env folder)</p> <p>The  following command creates a conda environment named np with a Python 3.9 interpreter</p> <pre>conda create -n np python=3.9\n</pre>"},{"location":"Demo/Week01_Python_Intro/#10.2-Check-conda-is-installed","title":"10.2 Check conda is installed\u00b6","text":"<pre>conda -V\n</pre>"},{"location":"Demo/Week01_Python_Intro/#10.3-List-virtual-environment","title":"10.3 List virtual environment\u00b6","text":"<p>now if you list virgual envionment, you can see the virtual environment that you just create.</p> <pre>conda env list\n</pre> <p>For example, I have three virtual environment: base, arcpu_pro, np</p> <p></p>"},{"location":"Demo/Week01_Python_Intro/#10.4-Activate-virtual-environment","title":"10.4 Activate virtual environment\u00b6","text":"<p>if you virtual environment named as 'np'</p> <pre>activate np\n</pre> <p></p>"},{"location":"Demo/Week01_Python_Intro/#10.5-Install-packages-(e.g.,-numpy)","title":"10.5 Install packages (e.g., numpy)\u00b6","text":"<pre>conda install numpy\n</pre>"},{"location":"Demo/Week01_Python_Intro/#11.-Delete-a-no-longer-needed-virtual-environment","title":"11. Delete a no longer needed virtual environment\u00b6","text":"<p>For example, delete a virtual environment 'np'</p> <pre>conda remove -n np --all -y\n</pre>"},{"location":"Demo/Week06_visualization_Demo/","title":"Week06 visualization Demo","text":"In\u00a0[1]: Copied! <pre>notebook_path = Path(os.path.abspath(\"__file__\")).parent\nos.chdir(notebook_path)\nos.getcwd()\n</pre> notebook_path = Path(os.path.abspath(\"__file__\")).parent os.chdir(notebook_path) os.getcwd() <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[1], line 1\n----&gt; 1 notebook_path = Path(os.path.abspath(\"__file__\")).parent\n      2 os.chdir(notebook_path)\n      3 os.getcwd()\n\nNameError: name 'Path' is not defined</pre> In\u00a0[9]: Copied! <pre>import pandas as pd\ndata = pd.read_csv('./Worcester_Police_Use_of_Force_Incidents_(July_2024).csv')\n\n# Convert 'Date___Time' column to datetime format\ndata['Date___Time'] = pd.to_datetime(data['Date___Time'], format='%m/%d/%y %I:%M %p')\n\n# Create a new column for the date\ndata['Date'] = data['Date___Time'].dt.date\n\n# Group data by date and count incidents per day\nincidents_per_day = data.groupby('Date').size()\n</pre> import pandas as pd data = pd.read_csv('./Worcester_Police_Use_of_Force_Incidents_(July_2024).csv')  # Convert 'Date___Time' column to datetime format data['Date___Time'] = pd.to_datetime(data['Date___Time'], format='%m/%d/%y %I:%M %p')  # Create a new column for the date data['Date'] = data['Date___Time'].dt.date  # Group data by date and count incidents per day incidents_per_day = data.groupby('Date').size() In\u00a0[3]: Copied! <pre>import plotly.express as px\nimport pandas as pd\n\n# Sample time series data\n# Assuming 'incidents_per_day' is a Pandas Series with a DateTime index\n# Creating some mock data for this example\ndate_rng = pd.date_range(start='2023-01-01', end='2023-12-31', freq='D')\n\n# Create the line plot\nfig = px.line(x=incidents_per_day.index, \n              y=incidents_per_day.values, \n              labels={'x': 'Date', 'y': 'Incidents'},\n              title='Interactive Time Series with Date Range Selector',\n              line_shape='spline')\n\n# Add a range slider for selecting the time range\nfig.update_layout(\n    xaxis=dict(\n        rangeselector=dict(\n            buttons=list([\n                dict(count=1, label=\"1 Month\", step=\"month\", stepmode=\"backward\"),\n                dict(count=6, label=\"6 Months\", step=\"month\", stepmode=\"backward\"),\n                dict(count=1, label=\"1 Year\", step=\"year\", stepmode=\"backward\"),\n                dict(step=\"all\", label=\"All Time\")\n            ])\n        ),\n        rangeslider=dict(visible=True),  # Show the range slider below the x-axis\n        type=\"date\"\n    )\n)\n\n# Show the plot\nfig.show()\n</pre> import plotly.express as px import pandas as pd  # Sample time series data # Assuming 'incidents_per_day' is a Pandas Series with a DateTime index # Creating some mock data for this example date_rng = pd.date_range(start='2023-01-01', end='2023-12-31', freq='D')  # Create the line plot fig = px.line(x=incidents_per_day.index,                y=incidents_per_day.values,                labels={'x': 'Date', 'y': 'Incidents'},               title='Interactive Time Series with Date Range Selector',               line_shape='spline')  # Add a range slider for selecting the time range fig.update_layout(     xaxis=dict(         rangeselector=dict(             buttons=list([                 dict(count=1, label=\"1 Month\", step=\"month\", stepmode=\"backward\"),                 dict(count=6, label=\"6 Months\", step=\"month\", stepmode=\"backward\"),                 dict(count=1, label=\"1 Year\", step=\"year\", stepmode=\"backward\"),                 dict(step=\"all\", label=\"All Time\")             ])         ),         rangeslider=dict(visible=True),  # Show the range slider below the x-axis         type=\"date\"     ) )  # Show the plot fig.show()"},{"location":"Labs/Lab01/Lab01_student/","title":"Lab 01","text":"Lab 01: Python Fundamental <ul> <li><p>This lab covers the fundamentals of Python data, including topics such as numerics, strings, lists, and dictionaries.</p> </li> <li><p>There are four questions in total. Please provide your code answers directly below each question.</p> </li> <li><p>Make sure to run all cells so that the answers are stored. Once completed, export your .ipynb file as either HTML or PDF, ensuring that all answers are included. Submit the HTML or PDF file to Canvas by midnight (11:29 PM) on September 8.</p> </li> <li><p>This lab is worth a total of 50 points and contributes 5% toward the final grade.</p> </li> </ul>"},{"location":"Labs/Lab01/Lab01_student/#Numeric","title":"Numeric\u00b6","text":"<p>Write a Python program that converts a temperature given in Celsius to Fahrenheit. Use the formula: (5 points in total)</p> <p>Fahrenheit = (Celsius * 9/5) + 32</p> <ol> <li>Set the Celsius temperature to 25 (2 points)</li> <li>Convert this temperature to Fahrenheit and display the result (3 points)</li> </ol>"},{"location":"Labs/Lab01/Lab01_student/#String","title":"String\u00b6","text":"<p>idea = 'Python programming is fun' (15 points in total)</p> <ol> <li>Count the number of words in the idea using <code>len()</code> (5 points)</li> <li>Replace the word 'Python' with 'Coding' using <code>replace()</code> method and display the updated string (5 points)</li> <li>Convert the first letter in each word upper case using <code>title()</code> method and display the updated string (5 points)</li> </ol>"},{"location":"Labs/Lab01/Lab01_student/#list","title":"list\u00b6","text":"<p>list_nums = [12,7,5,51,26,44,5,5] (15 points in total)</p> <ol> <li>Sort the list in ascending order using <code>sort()</code> and display the updated list (5 points)</li> <li>Append the number '25' to the end of the list using <code>append()</code> and displayed the updated list (5 points)</li> <li>Return the number of times the value '5' appear in the list using <code>count()</code> (5 points)</li> </ol>"},{"location":"Labs/Lab01/Lab01_student/#Dictionaries","title":"Dictionaries\u00b6","text":"<p>Landmarks = {'Worcester Art Museum': {'location': '55 Salisbury Street', 'description': 'Features an extensive collection of art spanning 50 centuries.'},   'Worcester Common': {'location': '455 Main Street', 'description': 'A large public park in the center of the city with green spaces and historical monuments.'},   'Hanover Theatre': {'location': '2 Southbridge Street', 'description': 'Offers a range of performances from Broadway shows to local productions.'}}</p> <ol> <li>Display description of 'Worcester Common' (5 points)</li> <li>Remove 'Hanaver Theatre' from the dictionary using <code>pop()</code> method and display the updated dictionary (10 points)</li> </ol>"},{"location":"software/ArcGISPro/","title":"ArcGIS Pro","text":"In\u00a0[\u00a0]: Copied!"},{"location":"software/ArcGISPro/#Set-up-ArcGIS-Pro-Account","title":"Set up ArcGIS Pro Account\u00b6","text":"<p>You should get an invitation email to set up your ArcGIS account</p> <p>The account is composed by your user name and clarku, e.g., yanawu_clarku.</p>"},{"location":"software/ArcGISPro/#Log-in-ArcGIS-Online","title":"Log in ArcGIS Online\u00b6","text":"<ul> <li><p>Log in ArcGIS Online</p> </li> <li><p>At the top of the page, click your username and click My settings.</p> </li> <li><p>On the My settings page, click the Licenses side tab</p> </li> <li><p>Next to ArcGIS Pro, click Download ArcGIS Pro (If you don't see ArcGIS Pro listed under your licensed products, please contact HelpDesk and JoDolan@clarku.edu).</p> </li> <li><p>In the Download ArcGIS Pro window, review the language setting. To download a localized version of ArcGIS Pro, change the setting to the language you want.</p> </li> <li><p>Click Download.</p> </li> </ul> <p>An executable file (.exe) is downloaded to your computer.</p>"}]}